upstream resolution-web-client {
  server resolution-web-client:3000;
}

upstream resolution-api {
  server resolution-api:8081;
}

upstream exchange {
  server exchange-api:8080;
}

# resolution server
server {
  listen 80;
  listen [::]:80;

  # frontend
  location / {
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://resolution-web-client;
  }

  # react socket
  location /sockjs-node {
    proxy_pass http://resolution-web-client/sockjs-node;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # react socket
  location /ws {
    proxy_pass http://resolution-web-client/ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # backend
  location /api {
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://resolution-api;
  }

  # prevent return 404 recursion.
  location = /404.html {
    internal;
  }
}

# exchange-api
server {
  listen 7000;
  listen [::]:7000;

  # backend
  location / {
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://exchange;
  }

  # Prevent return 404 recursion.
  location = /404.html {
    internal;
  }
}
